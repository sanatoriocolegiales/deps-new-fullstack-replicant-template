(ns test-aceptacion-firefox
  (:require [clojure.test :refer :all]
            [etaoin.api :as e]
            [clj-test-containers.core :as tc])
  (:import [org.testcontainers Testcontainers]))

(def ^:dynamic firefox-driver nil)

(def url "http://host.testcontainers.internal:4500")

(Testcontainers/exposeHostPorts (int-array [4500]))

(defn firefox-container-fixture
  [test-fn] 
  (let [firefox-container (-> (tc/create {:image-name "selenium/standalone-firefox:latest"
                                          :exposed-ports [4444]})
                              (tc/start!))]
    (with-bindings {#'firefox-driver (e/firefox-headless {:port (get (:mapped-ports firefox-container) 4444)
                                                          :host (:host firefox-container)
                                                          :args ["--no-sandbox"]})} 
      (test-fn)) 
    (tc/stop! firefox-container)))

(use-fixtures :once firefox-container-fixture)  

(deftest tests-de-aceptacion 
  (testing "Al iniciar aparece tabla con pacientes" 
    (is (map? (e/go firefox-driver url)))
    (is (true? (do 
                 (e/wait 3)
                 (e/exists? firefox-driver {:tag :table}))))))
 
(comment

  (def firefox-container (-> (tc/create {:image-name "selenium/standalone-firefox:latest"
                                         :exposed-ports [4444]})
                             (tc/start!)))

  (def firefox-driver (e/firefox-headless {:port (get (:mapped-ports firefox-container) 4444)
                                           :host (:host firefox-container)
                                           :args ["--no-sandbox"]}))

  (run-test tests-de-aceptacion)

  (e/refresh firefox-driver)

  (e/exists? firefox-driver {:css "body>div>div>table"})

  (e/exists? firefox-driver {:css "body>div>h1"})

  (e/go firefox-driver url)

  (e/exists? firefox-driver [{:tag :body} {:tag :div} {:tag :h1}])

  (e/exists? firefox-driver [{:tag :body} {:tag :div} {:tag :div} {:tag :table}])

  (e/exists? firefox-driver {:tag :table})

  (doto firefox-driver
    (e/go url)
    (e/exists? [{:tag :body} {:tag :div} {:tag :h1}])
    (e/quit))

  (e/exists? firefox-driver {:tag :table})

  (e/with-firefox-headless firefox-driver
    (e/go firefox-driver url))

  (e/with-firefox-headless firefox-driver
    (e/go firefox-driver "https://bogoyavlensky.com/blog/e2e-tests-in-clojure-with-testcontainers/"))

  (doto firefox-driver
    (e/go "https://en.wikipedia.org/")
    (e/set-window-size {:width 1280 :height 800})
    (e/wait-visible [{:tag :input :name :search}])
    (e/fill {:tag :input :name :search} "Clojure programming language"))

  (e/go firefox-driver "https://en.wikipedia.org/")
  (e/fill firefox-driver {:tag :input :name :search} "Clojure programming language")

  (e/get-title firefox-driver)

  (e/quit firefox-driver)

  (tc/stop! firefox-container)

  :rcf)